@(message: parsing.Message)

@arguments(fields: Seq[parsing.Field]) = @{
  fields.map(f => f.scalaName + ": " + f.tpe.scalaType)
}

@comment(paragraphs: Seq[String]) = @{
  paragraphs.mkString("/**\n * ", "\n * ", "\n */")
}

@defining(message.description.grouped(120).toSeq){intro =>
@defining(message.fields.map(field => "@param " + field.name + " " + field.description)){ fields =>
@comment(intro ++ fields)}}
case class @{message.scalaName}@arguments(message.fields).mkString("(", ", ", ")") extends Message